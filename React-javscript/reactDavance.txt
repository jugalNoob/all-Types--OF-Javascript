 let data1=["jugal" , "sharma" , "knaika"]

  let maps=data1.map((elem, index, arr) => {
    return ["element " + elem, "array " + arr[index], "index " + index]
  })
  
  console.log(maps)



import React from 'react'
import One from "./one.png"
function App() {

  let images=[1 , 2 , 3]
  return (
    <div>

{/* {images.map(()=>(

<img src={One} alt="" />


))} */}


{

  images.map(()=>{

    return(
      <>
        <img src={One} width="210px" height="500px" alt="" />
      </>
    )
  })
}

    </div>
  )
}

export default App

.all-one{
  
  display: flex;
  justify-content: center;

  margin: 20px;

}

.ones{
  margin: 50px;
  border-radius:20px ;
  /* width: 500px;
  height: 500px; */
  overflow: scroll;
}

.ones img{

  display: flex;
  margin: 50px;
  background-color: black;

}


//with search img algo  

import React, { useState } from 'react';
import One from './one.png';

function App() {
  const [searchTerm, setSearchTerm] = useState('');
  const images = [1, 2, 3, 4, 5];

  const filteredImages = images.filter((image) =>
    image.toString().includes(searchTerm)
  );

  return (
    <div>
    
      {filteredImages.map((image) => (
        <img
          src={One}
          className='ones'
          width='200px'
          height='200px'
          alt={`Image ${image}`}
          key={image}
        />
      ))}

<br />
<br />
      <input
        type='text'
        placeholder='Search images...'
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
      />
    </div>
  );
}

export default App;


////Map filteredImages

import React, { useState } from 'react';

function App() {
  const [list, setList] = useState([
    { name: 'Alice', age: 24 },
    { name: 'Bob', age: 32 },
    { name: 'Charlie', age: 18 },
    { name: 'David', age: 27 },
    { name: 'Eve', age: 21 },
  ]);

  const [search, setSearch] = useState('');

  const filteredList = list.filter((item) =>
    item.name.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <div>
      <input
        type="text"
        placeholder="Search by name"
        value={search}
        onChange={(e) => setSearch(e.target.value)}
      />
      <ul>
        {filteredList.map((item, index) => (
          <li key={index}>
            {item.name}, {item.age}
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;


|||||||||Fome error sat


const [name, setName] = useState("");
const [nameError, setNameError] = useState("");

const validateName = () => {
  if (!name) {
    setNameError("Name is required.");
  } else if (name.length < 3) {
    setNameError("Name must be at least 3 characters long.");
  } else {
    setNameError("");
  }
};
{ nameError && <div className="error">{nameError}</div> }


<input type="text" value={name} onChange={(e) => setName(e.target.value)} />
<input type="text" value={name} onChange={(e) => setName(e.target.value)} onBlur={validateName} />





/////////////////!SECTION form validation 


import React,{useState,useContext} from 'react'
import { useHistory } from 'react-router-dom';
import "./style/form.css"
import { UserContext } from '../App';
function Form() {
  const {state , dispatch}= useContext(UserContext);
  const history=useHistory();
      const [name, setName] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [errors, setErrors] = useState({});
  
    const validate = () => {
      const errors = {};
  
      if (!name) {
        errors.name = 'Name is required';
      }else if(name.length<7){
        errors.name = 'add more word';
      }
  
      if (!email) {
        errors.email = 'Email is required';
      } else if (!/\S+@\S+\.\S+/.test(email)) {
        errors.email = 'Email is invalid';
      }
  
      if (!password) {
        errors.password = 'Password is required';
      }else if(password.length<7){

        errors.password = 'enter more word';
      }
  
      return errors;
    };
  
    const handleSubmit = async(event) => {
      event.preventDefault();
  
      const errors = validate();
  
      if (Object.keys(errors).length === 0) {
        // Submit form
      } else {
        setErrors(errors);
      }

      console.log(errors)
      
    

      const users=await fetch("/Signup",{
        method:"POST",
        headers:{
        "Content-Type": "application/json",
        },
        body:JSON.stringify({
      name,
        email,
        password,
        })
        })    
        const res=await users.json();

        if(users.status === 400 || !res){
          window.alert("please enter your sigup")
    alert("please enter your Login")
    
      }else{
        // localStorage.setItem("usersdatatoken",res.result.token);
          alert("is complete")
          history.push("/")
      }

    };
  

  return (
    <div>
{/* start row class line  */}

<div className="image-add">


<div className="contaired glass">

<div className="create-from">

<h1>Sign up to our platform</h1>

<p>create a new account</p>
</div>

<div className="form">


 <form onSubmit={handleSubmit} method="POST">
 <center>


         <input type="text" value={name} onChange={(e) => setName(e.target.value)} placeholder="enter a name" />
      <p>  {errors.name && <span>{errors.name}</span>}</p> 
      
       <br />
      
  
         <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="enter a email" />
         <p>  {errors.email && <span>{errors.email}</span>}</p>
      
       <br />
    

      
         <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="enter a password" />
       <p> {errors.password && <span>{errors.password}</span>}</p> 
   

       <br />
      
       <button type="submit">Submit</button>
       </center>
     </form>


</div>



</div>
</div>

{/* last row class line start */}
    </div>
  )
}

export default Form


|||||||||||If Else|||||||||||||||

import React, { useState } from 'react';

function App() {
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  const handleClick = () => {
    setIsLoggedIn(!isLoggedIn);
  };

  return (
    <div>
      <button onClick={handleClick}>
        {isLoggedIn ? 'Log out' : 'Log in'}
      </button>
      {isLoggedIn ? <WelcomeMessage /> : <LoginPage />}
    </div>
  );
}


import React, { useState } from 'react';

function App() {
  const [showElement, setShowElement] = useState(false);

  const handleClick = () => {
    setShowElement(!showElement);
  };

  return (
    <div>
      <button onClick={handleClick}>
        {showElement ? 'Hide Element' : 'Show Element'}
      </button>
      {showElement && <p>This is the element to be shown or hidden.</p>}
    </div>
  );
}


import React, { useState } from 'react';

function App() {
  const [list, setList] = useState([
    { name: 'Alice', age: 24 },
    { name: 'Bob', age: 32 },
    { name: 'Charlie', age: 18 },
    { name: 'David', age: 27 },
    { name: 'Eve', age: 21 },
  ]);

  const [search, setSearch] = useState('');
  const [error, setError] = useState(null);

  const filteredList = list.filter((item) =>
    item.name.toLowerCase().includes(search.toLowerCase())
  );

  const handleSearch = (e) => {
    setSearch(e.target.value);
    setError(null);
  }

  const handleFormSubmit = (e) => {
    e.preventDefault();
    if (!search.trim()) {
      setError('Please enter a valid search term');
      return;
    }
    setError(null);
  }

  return (
    <div>
      <form onSubmit={handleFormSubmit}>
        <input
          type="text"
          placeholder="Search by name"
          value={search}
          onChange={handleSearch}
        />
        <button type="submit">Search</button>
      </form>
      {error && <p>{error}</p>}
      <ul>
        {filteredList.map((item, index) => (
          <li key={index}>
            {item.name}, {item.age}
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;


|||||||||||||||||||||